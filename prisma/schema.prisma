generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  customer_id       Int      @id @default(autoincrement())
  name              String
  email             String?  @unique
  phone             String?  @unique
  password          String
  registration_date DateTime @default(now())
  ratings           Rating[]
  trips             Trip[]
}

model Driver {
  driver_id         Int      @id @default(autoincrement())
  name              String
  email             String?  @unique
  phone             String?  @unique
  password          String
  license_number    String   @unique
  typeOfVehicle     String   // New attribute
  registration_date DateTime @default(now())
  ratings           Rating[]
  taxis             Taxi[]
  trips             Trip[]
}

model Taxi {
  taxi_id       Int     @id @default(autoincrement())
  driver_id     Int
  license_plate String  @unique
  model         String
  make          String
  year          Int
  color         String?
  driver        Driver  @relation(fields: [driver_id], references: [driver_id])
  trips         Trip[]
  distance      String? 
  number        String? 
  charge        Float?  
  time          DateTime?
}

model Trip {
  trip_id           Int       @id @default(autoincrement())
  customer_id       Int
  driver_id         Int
  taxi_id           Int
  start_location    String
  end_location      String
  start_time        DateTime
  end_time          DateTime?
  status            String
  fare              Float?
  payment           Payment?
  rating            Rating?
  source_lng        Float     // New attribute
  source_lat        Float     // New attribute
  destination_lng   Float     // New attribute
  destination_lat   Float     // New attribute
  customer          Customer  @relation(fields: [customer_id], references: [customer_id])
  driver            Driver    @relation(fields: [driver_id], references: [driver_id])
  taxi              Taxi      @relation(fields: [taxi_id], references: [taxi_id])
}

model Payment {
  payment_id     Int      @id @default(autoincrement())
  trip_id        Int      @unique
  amount         Float
  payment_method String
  payment_status String
  payment_date   DateTime @default(now())
  trip           Trip     @relation(fields: [trip_id], references: [trip_id])
}

model Rating {
  rating_id   Int      @id @default(autoincrement())
  trip_id     Int      @unique
  customer_id Int
  driver_id   Int
  rating      Int
  comments    String?
  rating_date DateTime @default(now())
  customer    Customer @relation(fields: [customer_id], references: [customer_id])
  driver      Driver   @relation(fields: [driver_id], references: [driver_id])
  trip        Trip     @relation(fields: [trip_id], references: [trip_id])
}
