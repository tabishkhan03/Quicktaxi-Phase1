generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  customer_id       Int      @id @default(autoincrement())
  name              String
  email             String?  @unique
  phone             String?  @unique
  password          String
  registration_date DateTime @default(now())
  ratings           Rating[]
  trips             Trip[]
}

model Driver {
  driver_id         Int      @id @default(autoincrement())
  name              String
  email             String?  @unique
  phone             String?  @unique
  password          String
  license_number    String   @unique
  registration_date DateTime @default(now())
  ratings           Rating[]
  taxis             Taxi[]
  trips             Trip[]
}

model Taxi {
  taxi_id       Int       @id @default(autoincrement())
  driver_id     Int
  license_plate String    @unique
  model         String
  make          String
  year          Int
  color         String?
  charge        Float?
  distance      String?
  number        String?
  time          DateTime?
  driver        Driver    @relation(fields: [driver_id], references: [driver_id])
  trips         Trip[]
}

model Trip {
  trip_id         Int       @id @default(autoincrement())
  customer_id     Int
  driver_id       Int
  taxi_id         Int
  start_location  String
  end_location    String
  start_time      DateTime
  end_time        DateTime?
  status          String
  fare            Float?
  destination_lat Float
  destination_lng Float
  source_lat      Float
  source_lng      Float
  payment         Payment?
  rating          Rating?
  customer        Customer  @relation(fields: [customer_id], references: [customer_id])
  driver          Driver    @relation(fields: [driver_id], references: [driver_id])
  taxi            Taxi      @relation(fields: [taxi_id], references: [taxi_id])
}

model Payment {
  payment_id     Int      @id @default(autoincrement())
  trip_id        Int      @unique
  amount         Float
  payment_method String
  payment_status String
  payment_date   DateTime @default(now())
  trip           Trip     @relation(fields: [trip_id], references: [trip_id])
}

model Rating {
  rating_id   Int      @id @default(autoincrement())
  trip_id     Int      @unique
  customer_id Int
  driver_id   Int
  rating      Int
  comments    String?
  rating_date DateTime @default(now())
  customer    Customer @relation(fields: [customer_id], references: [customer_id])
  driver      Driver   @relation(fields: [driver_id], references: [driver_id])
  trip        Trip     @relation(fields: [trip_id], references: [trip_id])
}